<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WildWest Diner Order Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
        }
        
        h1 {
            color: white;
        }
        
        body {
            background-color: #12372a;
        }
        
        .container {
            display: flex;
            min-height: 100vh;
        }
        /* Sidebar Styles */
        
        .sidebar {
            width: 240px;
            background-color: #1F5D47;
            padding: 20px;
            border-right: 1px solid #2A1237;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 24px;
            font-weight: bold;
            font-size: 1.2rem;
            color: white;
        }
        
        .nav-item {
            display: flex;
            align-items: center;
            padding: 12px;
            margin-bottom: 8px;
            border-radius: 8px;
            cursor: pointer;
            color: white;
            gap: 12px;
        }
        
        .nav-item:hover {
            background-color: #123717;
        }
        
        .nav-item.active {
            background-color: #123137;
            color: #fff;
        }
        /* Main Content Styles */
        
        .main-content {
            flex: 1;
            padding: 24px;
        }
        
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
        }
        
        .table-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 24px;
            align-items: start;
        }
        
        .table-unit {
            background-color: white;
            border-radius: 12px;
            padding: 16px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            text-align: center;
        }
        
        .table {
            position: relative;
            width: 200px;
            height: 200px;
            margin: 0 auto;
            background-color: #4CAF50;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);
            background-size: 10px 10px;
        }
        
        .table-number {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: rgba(255, 255, 255, 0.8);
            font-weight: bold;
            font-size: 1.5em;
            z-index: 1;
        }
        
        .table-status {
            margin-top: 12px;
            font-weight: bold;
        }
        
        .chair {
            width: 30px;
            height: 30px;
            background-color: #666;
            position: absolute;
            border-radius: 6px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }
        
        .chair.top {
            top: -40px;
            left: calc(50% - 15px);
        }
        
        .chair.right {
            top: calc(50% - 15px);
            right: -40px;
        }
        
        .chair.bottom {
            bottom: -40px;
            left: calc(50% - 15px);
        }
        
        .chair.left {
            top: calc(50% - 15px);
            left: -40px;
        }
        
        .search-bar {
            padding: 8px 16px;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            width: 240px;
        }
        
        .tabs {
            display: flex;
            gap: 16px;
            margin-bottom: 24px;
        }
        
        .tab {
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            background-color: #f8f9fa;
        }
        
        .tab.active {
            background-color: #f8d7b8;
            color: #8B4513;
        }
        
        .content-section {
            display: none;
        }
        
        .content-section.active {
            display: block;
        }
        
        .order-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 24px;
            align-items: start;
        }
        
        .order-card {
            background-color: white;
            border-radius: 12px;
            padding: 16px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
        }
        
        .order-time {
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .order-items {
            list-style: none;
            padding: 0;
            margin: 0;
            max-height: 300px;
            overflow-y: auto;
        }
        
        .order-items.collapsed {
            max-height: 120px;
        }
        
        .order-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 0;
            border-bottom: 1px solid #eee;
        }
        
        .order-item.completed {
            text-decoration: line-through;
            color: #6c757d;
        }
        
        .status-button {
            padding: 5px 10px;
            border: none;
            border-radius: 15px;
            color: white;
            cursor: pointer;
            font-size: 12px;
        }
        
        .status-waiting {
            background-color: #dc3545;
        }
        
        .status-preparing {
            background-color: #ffc107;
        }
        
        .status-ready {
            background-color: #28a745;
        }
        
        .status-completed {
            background-color: #6c757d;
        }
        
        .order-tag {
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 0.85rem;
            background-color: #f8d7b8;
            color: #8B4513;
        }
        
        .action-button {
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            margin-top: 15px;
            cursor: pointer;
            background-color: #f8f9fa;
            color: #6c757d;
        }
        
        .action-button.complete {
            background-color: #12372a;
            color: #fff;
        }
        
        .action-button.expandable {
            background-color: #12372a;
            color: #fff;
        }
        
        .items-count {
            color: #8B4513;
            font-weight: bold;
            margin-bottom: 10px;
        }
        
        .order-item-details {
            display: flex;
            justify-content: space-between;
            flex: 1;
            margin-right: 10px;
        }
        
        .order-total {
            display: flex;
            justify-content: space-between;
            padding: 15px 0;
            margin-top: 10px;
            border-top: 1px solid #eee;
            font-weight: bold;
        }
        
        .remove-button {
            background-color: #dc3545 !important;
            color: white !important;
        }
        
        .order-card {
            transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
            transform-origin: center;
        }
        
        .order-card.removing {
            opacity: 0;
            transform: scale(0.95);
            pointer-events: none;
        }
        
        .order-tag {
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 0.85rem;
        }
        
        .order-tag.take-away {
            background-color: #8B4513;
            color: white;
        }
        
        .order-tag.dine-in {
            background-color: #28a745;
            color: white;
        }
    </style>
</head>

<body>
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                ðŸ¤  WildWest Diner
            </div>
            <div class="nav-item active" data-section="order-list">
                ðŸ“‹ Order List
            </div>
            <div class="nav-item" data-section="seating-plans">
                ðŸª‘ Seating Plans
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Orders Section -->
            <div id="order-list" class="content-section active">
                <div class="header">
                    <h1>Orders</h1>
                    <input type="text" class="search-bar" placeholder="Search orders...">
                </div>

                <div class="tabs">
                    <div class="tab active" data-tab="current">Current Orders</div>
                    <div class="tab" data-tab="completed">Completed Orders</div>
                </div>

                <div class="order-grid" id="ordersContainer"></div>
            </div>

            <!-- Seating Plans Section -->
            <div id="seating-plans" class="content-section">
                <div class="header">
                    <h1>Table Reservation Status</h1>
                </div>

                <div class="tabs">
                    <div class="tab active" data-tab="all">All Tables</div>
                    <div class="tab" data-tab="available">Available</div>
                    <div class="tab" data-tab="reserved">Reserved</div>
                    <div class="tab" data-tab="occupied">Occupied</div>
                </div>

                <div class="table-grid" id="tableContainer"></div>
            </div>
        </div>
    </div>
    <script src="orders.js"></script>
    <script>
        const socket = io("http://127.0.0.1:5000"); // Initialize WebSocket connection

        class OrderSystem {
            constructor() {
                window.parent.postMessage({
                    type: 'initializeOrderSystem'
                }, '*');
                window.addEventListener('message', (event) => {
                    if (event.data.type === 'orderUpdate') {
                        this.currentOrders = event.data.orders || [];
                        this.completedOrders = event.data.completed || [];
                        this.render();
                    }
                });
                this.statusCycle = ['waiting', 'preparing', 'ready', 'completed'];
                this.currentOrders = [];
                this.completedOrders = [];
                this.expandedOrders = new Set();
                this.currentTab = 'current';
                this.prices = {
                    'Sizzling Steak': 32.95,
                    'Grilled Chicken': 19.95,
                    'Beef Burger': 16.95,
                    'Spaghetti Bolognese': 17.95,
                    'Fish and Chips': 18.95,
                    'Lamb Chop': 28.95,
                    'Stuffed Mushrooms': 9.95,
                    'Crispy Calamari': 10.95,
                    'Classic Bruschetta': 7.95,
                    'Buffalo Wings': 12.95,
                    'Cheese Platter': 15.95,
                    'Mozzarella Sticks': 8.95,
                    'Chocolate Lava Cake': 8.95,
                    'New York Cheesecake': 7.95,
                    'Apple Pie': 6.95
                };
                this.init();
                this.setupEventListeners();
            }

            updateItemStatus(orderId, itemIndex) {
                const order = this.currentOrders.find(o => o.id === orderId);
                if (order) {
                    const currentStatus = order.items[itemIndex].status;
                    const nextStatus = this.getNextStatus(currentStatus);

                    if (this.statusCycle.indexOf(nextStatus) > this.statusCycle.indexOf(currentStatus)) {
                        order.items[itemIndex].status = nextStatus;
                    }

                    // Emit the WebSocket event instead of making a POST request
                    socket.emit("updateItemStatus", {
                        orderId,
                        itemIndex,
                        status: nextStatus
                    });

                    this.render();
                    window.parent.postMessage({
                        type: "orderUpdate",
                        orders: this.currentOrders,
                        completed: this.completedOrders
                    }, "*");
                }
            }

            getNextStatus(currentStatus) {
                const currentIndex = this.statusCycle.indexOf(currentStatus);
                if (currentIndex === -1) return 'waiting'; // Fallback to initial state
                return this.statusCycle[(currentIndex + 1) % this.statusCycle.length];
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            new OrderSystem();
        });




        class WildWestReservationSystem {
            constructor() {
                this.tables = [{
                    id: 1,
                    status: 'empty',
                    capacity: 4
                }, {
                    id: 2,
                    status: 'empty',
                    capacity: 4
                }, {
                    id: 3,
                    status: 'empty',
                    capacity: 4
                }, {
                    id: 4,
                    status: 'empty',
                    capacity: 4
                }, {
                    id: 5,
                    status: 'empty',
                    capacity: 4
                }, {
                    id: 6,
                    status: 'empty',
                    capacity: 4
                }];
                this.currentTableFilter = 'all';
                this.init();
            }

            init() {
                this.setupEventListeners();
                this.renderTables();
            }

            setupEventListeners() {
                // Table status filtering and changing
                document.getElementById('tableContainer').addEventListener('click', (e) => {
                    const tableElement = e.target.closest('.table');
                    if (tableElement) {
                        const tableId = parseInt(tableElement.dataset.tableId);
                        this.changeTableStatus(tableId);
                    }
                });

                // Table status tabs
                document.querySelector('#seating-plans .tabs').addEventListener('click', (e) => {
                    if (e.target.classList.contains('tab')) {
                        document.querySelector('#seating-plans .tab.active').classList.remove('active');
                        e.target.classList.add('active');
                        this.currentTableFilter = e.target.dataset.tab;
                        this.renderTables();
                    }
                });

                // Navigation between sections
                document.querySelectorAll('.nav-item').forEach(item => {
                    item.addEventListener('click', () => {
                        // Update nav items
                        document.querySelectorAll('.nav-item').forEach(navItem =>
                            navItem.classList.remove('active')
                        );
                        item.classList.add('active');

                        // Show/hide content sections
                        document.querySelectorAll('.content-section').forEach(section =>
                            section.classList.remove('active')
                        );
                        document.getElementById(item.dataset.section).classList.add('active');
                    });
                });
            }

            changeTableStatus(tableId) {
                const table = this.tables.find(t => t.id === tableId);
                if (table) {
                    switch (table.status) {
                        case 'empty':
                            table.status = 'reserved';
                            break;
                        case 'reserved':
                            table.status = 'occupied';
                            break;
                        case 'occupied':
                            table.status = 'empty';
                            break;
                    }
                    this.renderTables();
                }
            }

            renderTables() {
                const container = document.getElementById('tableContainer');
                const filteredTables = this.filterTables();
                container.innerHTML = filteredTables.map(table => this.generateTableCard(table)).join('');
            }

            filterTables() {
                switch (this.currentTableFilter) {
                    case 'available':
                        return this.tables.filter(table => table.status === 'empty');
                    case 'reserved':
                        return this.tables.filter(table => table.status === 'reserved');
                    case 'occupied':
                        return this.tables.filter(table => table.status === 'occupied');
                    default:
                        return this.tables;
                }
            }

            generateTableCard(table) {
                let backgroundColor, statusText;
                switch (table.status) {
                    case 'empty':
                        backgroundColor = '#4CAF50'; // Green
                        statusText = 'Available';
                        break;
                    case 'reserved':
                        backgroundColor = '#FFA500'; // Orange
                        statusText = 'Reserved';
                        break;
                    case 'occupied':
                        backgroundColor = '#FF0000'; // Red
                        statusText = 'Occupied';
                        break;
                }

                return `
                <div class="table-unit">
                    <div class="table" 
                         data-table-id="${table.id}" 
                         style="background-color: ${backgroundColor}">
                        <div class="table-number">${table.id}</div>
                    </div>
                    <div class="chair top"></div>
                    <div class="chair right"></div>
                    <div class="chair bottom"></div>
                    <div class="chair left"></div>
                    <div class="table-status" style="color: ${backgroundColor}">
                        ${statusText} (${table.capacity} seats)
                    </div>
                </div>
                `;
            }
        }

        const orderSystem = new OrderSystem();
        const wildWestReservationSystem = new WildWestReservationSystem();
    </script>
</body>

</html>
